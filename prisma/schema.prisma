// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  READER

  @@map("role")
}

model User {
  id        String @id @default(uuid()) @db.Uuid
  firstName String @map("first_name")
  lastName  String @map("last_name")
  avatar    String
  email     String @unique
  googleId  String @map("google_id")
  role      Role   @default(READER)

  loanHistory LoanHistory[]

  @@map("users")
}

model Book {
  id            Int       @id @default(autoincrement())
  title         String
  description   String
  image         String?
  publishedYear Int
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  isBorrowed    Boolean   @default(false)
  returnDate    DateTime?

  author   Author @relation(fields: [authorId], references: [id])
  authorId Int

  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])

  loanHistory LoanHistory[]

  @@map("books")
}

model LoanHistory {
  id             Int       @id @default(autoincrement())
  bookId         Int
  book           Book      @relation(fields: [bookId], references: [id])
  userId         String    @db.Uuid
  user           User      @relation(fields: [userId], references: [id])
  borrowedIn     DateTime  @default(now())
  returnedIn     DateTime?
  returnedAtDate DateTime?

  @@unique([id, userId])
}

model Author {
  id        Int      @id @default(autoincrement())
  name      String
  books     Book[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("authors")
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  books     Book[]

  @@map("categories")
}
